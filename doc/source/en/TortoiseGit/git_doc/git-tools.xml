<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<article lang="en" id="A short git tools survey">
<articleinfo>
    <title>A short git tools survey</title>
        <indexterm>
                <primary>A short git tools survey</primary>
        </indexterm>
</articleinfo>
<simplesect id="_introduction">
<title>Introduction</title>
<simpara>Apart from git contrib/ area there are some others third-party tools
you may want to look.</simpara>
<simpara>This document presents a brief summary of each tool and the corresponding
link.</simpara>
</simplesect>
<simplesect id="_alternative_augmentative_porcelains">
<title>Alternative/Augmentative Porcelains</title>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">Cogito</emphasis> (<ulink url="http://www.kernel.org/pub/software/scm/cogito/">http://www.kernel.org/pub/software/scm/cogito/</ulink>)
</simpara>
<literallayout class="monospaced">Cogito is a version control system layered on top of the git tree history
storage system. It aims at seamless user interface and ease of use,
providing generally smoother user experience than the "raw" Core GIT
itself and indeed many other version control systems.</literallayout>
<literallayout class="monospaced">Cogito is no longer maintained as most of its functionality
is now in core GIT.</literallayout>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">pg</emphasis> (<ulink url="http://www.spearce.org/category/projects/scm/pg/">http://www.spearce.org/category/projects/scm/pg/</ulink>)
</simpara>
<literallayout class="monospaced">pg is a shell script wrapper around GIT to help the user manage a set of
patches to files. pg is somewhat like quilt or StGIT, but it does have a
slightly different feature set.</literallayout>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">StGit</emphasis> (<ulink url="http://www.procode.org/stgit/">http://www.procode.org/stgit/</ulink>)
</simpara>
<literallayout class="monospaced">Stacked GIT provides a quilt-like patch management functionality in the
GIT environment. You can easily manage your patches in the scope of GIT
until they get merged upstream.</literallayout>
</listitem>
</itemizedlist>
</simplesect>
<simplesect id="_history_viewers">
<title>History Viewers</title>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">gitk</emphasis> (shipped with git-core)
</simpara>
<literallayout class="monospaced">gitk is a simple Tk GUI for browsing history of GIT repositories easily.</literallayout>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">gitview</emphasis>  (contrib/)
</simpara>
<literallayout class="monospaced">gitview is a GTK based repository browser for git</literallayout>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">gitweb</emphasis> (shipped with git-core)
</simpara>
<literallayout class="monospaced">GITweb provides full-fledged web interface for GIT repositories.</literallayout>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">qgit</emphasis> (<ulink url="http://digilander.libero.it/mcostalba/">http://digilander.libero.it/mcostalba/</ulink>)
</simpara>
<literallayout class="monospaced">QGit is a git/StGIT GUI viewer built on Qt/C++. QGit could be used
to browse history and directory tree, view annotated files, commit
changes cherry picking single files or applying patches.
Currently it is the fastest and most feature rich among the git
viewers and commit tools.</literallayout>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">tig</emphasis> (<ulink url="http://jonas.nitro.dk/tig/">http://jonas.nitro.dk/tig/</ulink>)
</simpara>
<literallayout class="monospaced">tig by Jonas Fonseca is a simple git repository browser
written using ncurses. Basically, it just acts as a front-end
for git-log and git-show/git-diff. Additionally, you can also
use it as a pager for git commands.</literallayout>
</listitem>
</itemizedlist>
</simplesect>
<simplesect id="_foreign_scm_interface">
<title>Foreign SCM interface</title>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">git-svn</emphasis> (shipped with git-core)
</simpara>
<literallayout class="monospaced">git-svn is a simple conduit for changesets between a single Subversion
branch and git.</literallayout>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">quilt2git / git2quilt</emphasis> (<ulink url="http://home-tj.org/wiki/index.php/Misc">http://home-tj.org/wiki/index.php/Misc</ulink>)
</simpara>
<literallayout class="monospaced">These utilities convert patch series in a quilt repository and commit
series in git back and forth.</literallayout>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">hg-to-git</emphasis> (contrib/)
</simpara>
<literallayout class="monospaced">hg-to-git converts a Mercurial repository into a git one, and
preserves the full branch history in the process. hg-to-git can
also be used in an incremental way to keep the git repository
in sync with the master Mercurial repository.</literallayout>
</listitem>
</itemizedlist>
</simplesect>
<simplesect id="_others">
<title>Others</title>
<itemizedlist>
<listitem>
<simpara>
<emphasis role="strong">(h)gct</emphasis> (<ulink url="http://www.cyd.liu.se/users/~freku045/gct/">http://www.cyd.liu.se/users/~freku045/gct/</ulink>)
</simpara>
<literallayout class="monospaced">Commit Tool or (h)gct is a GUI enabled commit tool for git and
Mercurial (hg). It allows the user to view diffs, select which files
to committed (or ignored / reverted) write commit messages and
perform the commit itself.</literallayout>
</listitem>
<listitem>
<simpara>
<emphasis role="strong">git.el</emphasis> (contrib/)
</simpara>
<literallayout class="monospaced">This is an Emacs interface for git. The user interface is modeled on
pcl-cvs. It has been developed on Emacs 21 and will probably need some
tweaking to work on XEmacs.</literallayout>
</listitem>
</itemizedlist>
<simpara><ulink url="http://git.or.cz/gitwiki/InterfacesFrontendsAndTools">http://git.or.cz/gitwiki/InterfacesFrontendsAndTools</ulink> has more
comprehensive list.</simpara>
</simplesect>
</article>
