From 49424f9357a6428c72f660a11fe8e68c45f512b1 Mon Sep 17 00:00:00 2001
From: Sven Strickroth <email@cs-ware.de>
Date: Thu, 13 Nov 2014 19:30:47 +0100
Subject: [PATCH] Make binary detection work similar to vanilla git

Main change: Don't treat chars > 128 as non-printable (common in UTF-8 files)

Signed-off-by: Sven Strickroth <email@cs-ware.de>
---
 src/buf_text.c      | 2 +-
 tests/core/buffer.c | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/buf_text.c b/src/buf_text.c
index 8d2b141..99abefa 100644
--- a/src/buf_text.c
+++ b/src/buf_text.c
@@ -190,7 +190,7 @@ bool git_buf_text_is_binary(const git_buf *buf)
 	while (scan < end) {
 		unsigned char c = *scan++;
 
-		if (c > 0x1F && c < 0x7F)
+		if ((c > 0x1F && c != 127) || c == '\b' || c == '\033' || c == '\014') /* handle BS, ESC and FF and all (chars > 0x1F excluding DEL) as printable */
 			printable++;
 		else if (c == '\0')
 			return true;
diff --git a/tests/core/buffer.c b/tests/core/buffer.c
index 641fed6..4549d9f 100644
--- a/tests/core/buffer.c
+++ b/tests/core/buffer.c
@@ -831,7 +831,7 @@ void test_core_buffer__classify_with_utf8(void)
 	cl_assert(!git_buf_text_contains_nul(&b));
 
 	b.ptr = data1; b.size = b.asize = data1len;
-	cl_assert(git_buf_text_is_binary(&b));
+	cl_assert(!git_buf_text_is_binary(&b)); // UTF-8 files are not considered binary (in vanilly git)
 	cl_assert(!git_buf_text_contains_nul(&b));
 
 	b.ptr = data2; b.size = b.asize = data2len;
-- 
1.9.4.msysgit.0

