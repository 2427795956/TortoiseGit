 ext/scintilla/win32/PlatWin.cxx               | 20 ++++++++++++--------
 ext/scintilla/win32/ScintillaWin.cxx          | 11 ++++++-----
 src/TortoiseGitBlame/TortoiseGitBlameView.cpp |  8 ++++----
 src/TortoiseGitBlame/TortoiseGitBlameView.h   |  2 +-
 src/Utils/MiscUI/SciEdit.cpp                  |  2 +-
 5 files changed, 24 insertions(+), 19 deletions(-)

diff --git a/ext/scintilla/win32/PlatWin.cxx b/ext/scintilla/win32/PlatWin.cxx
index c0dbb84..80d8e30 100644
--- a/ext/scintilla/win32/PlatWin.cxx
+++ b/ext/scintilla/win32/PlatWin.cxx
@@ -274,15 +274,15 @@ static D2D1_TEXT_ANTIALIAS_MODE DWriteMapFontQuality(int extraFontFlag) {
 }
 #endif
 
-static void SetLogFont(LOGFONTA &lf, const char *faceName, int characterSet, float size, int weight, bool italic, int extraFontFlag) {
-	lf = LOGFONTA();
+static void SetLogFont(LOGFONTW &lf, const char *faceName, int characterSet, float size, int weight, bool italic, int extraFontFlag) {
+	lf = LOGFONTW();
 	// The negative is to allow for leading
 	lf.lfHeight = -(abs(static_cast<int>(size + 0.5)));
 	lf.lfWeight = weight;
 	lf.lfItalic = static_cast<BYTE>(italic ? 1 : 0);
 	lf.lfCharSet = static_cast<BYTE>(characterSet);
 	lf.lfQuality = Win32MapFontQuality(extraFontFlag);
-	StringCopy(lf.lfFaceName, faceName);
+	UTF16FromUTF8(faceName, strlen(faceName)+1, lf.lfFaceName, LF_FACESIZE);
 }
 
 /**
@@ -305,7 +305,7 @@ class FontCached : Font {
 	FontCached *next;
 	int usage;
 	float size;
-	LOGFONTA lf;
+	LOGFONTW lf;
 	int technology;
 	int hash;
 	explicit FontCached(const FontParameters &fp);
@@ -328,7 +328,7 @@ FontCached::FontCached(const FontParameters &fp) :
 	hash = HashFont(fp);
 	fid = 0;
 	if (technology == SCWIN_TECH_GDI) {
-		HFONT hfont = ::CreateFontIndirectA(&lf);
+		HFONT hfont = ::CreateFontIndirectW(&lf);
 		fid = reinterpret_cast<void *>(new FormatAndMetrics(hfont, fp.extraFontFlag, fp.characterSet));
 	} else {
 #if defined(USE_D2D)
@@ -377,14 +377,18 @@ FontCached::FontCached(const FontParameters &fp) :
 }
 
 bool FontCached::SameAs(const FontParameters &fp) {
-	return
+	if (
 		(size == fp.size) &&
 		(lf.lfWeight == fp.weight) &&
 		(lf.lfItalic == static_cast<BYTE>(fp.italic ? 1 : 0)) &&
 		(lf.lfCharSet == fp.characterSet) &&
 		(lf.lfQuality == Win32MapFontQuality(fp.extraFontFlag)) &&
-		(technology == fp.technology) &&
-		0 == strcmp(lf.lfFaceName,fp.faceName);
+		(technology == fp.technology)) {
+		wchar_t wszFace[LF_FACESIZE];
+		UTF16FromUTF8(fp.faceName, strlen(fp.faceName)+1, wszFace, LF_FACESIZE);
+		return 0 == wcscmp(lf.lfFaceName,wszFace);
+	}
+	return false;
 }
 
 void FontCached::Release() {
diff --git a/ext/scintilla/win32/ScintillaWin.cxx b/ext/scintilla/win32/ScintillaWin.cxx
index a0d9245..5275832 100644
--- a/ext/scintilla/win32/ScintillaWin.cxx
+++ b/ext/scintilla/win32/ScintillaWin.cxx
@@ -2161,7 +2161,7 @@ void ScintillaWin::ImeStartComposition() {
 			// Since the style creation code has been made platform independent,
 			// The logfont for the IME is recreated here.
 			int styleHere = (pdoc->StyleAt(sel.MainCaret())) & 31;
-			LOGFONTA lf = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ""};
+			LOGFONTW lf = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, L""};
 			int sizeZoomed = vs.styles[styleHere].size + vs.zoomLevel * SC_FONT_SIZE_MULTIPLIER;
 			if (sizeZoomed <= 2 * SC_FONT_SIZE_MULTIPLIER)	// Hangs if sizeZoomed <= 1
 				sizeZoomed = 2 * SC_FONT_SIZE_MULTIPLIER;
@@ -2176,10 +2176,11 @@ void ScintillaWin::ImeStartComposition() {
 			lf.lfItalic = static_cast<BYTE>(vs.styles[styleHere].italic ? 1 : 0);
 			lf.lfCharSet = DEFAULT_CHARSET;
 			lf.lfFaceName[0] = '\0';
-			if (vs.styles[styleHere].fontName)
-				StringCopy(lf.lfFaceName, vs.styles[styleHere].fontName);
-
-			::ImmSetCompositionFontA(hIMC, &lf);
+			if (vs.styles[styleHere].fontName) {
+				const char* fontName = vs.styles[styleHere].fontName;
+				UTF16FromUTF8(fontName, strlen(fontName)+1, lf.lfFaceName, LF_FACESIZE);
+			}
+			::ImmSetCompositionFontW(hIMC, &lf);
 		}
 		::ImmReleaseContext(MainHWND(), hIMC);
 		// Caret is displayed in IME window. So, caret in Scintilla is useless.
diff --git a/src/TortoiseGitBlame/TortoiseGitBlameView.cpp b/src/TortoiseGitBlame/TortoiseGitBlameView.cpp
index 95c7213..d848953 100644
--- a/src/TortoiseGitBlame/TortoiseGitBlameView.cpp
+++ b/src/TortoiseGitBlame/TortoiseGitBlameView.cpp
@@ -625,14 +625,14 @@ LRESULT CTortoiseGitBlameView::SendEditor(UINT Msg, WPARAM wParam, LPARAM lParam
 	return ::SendMessage(m_wEditor, Msg, wParam, lParam);
 }
 
-void CTortoiseGitBlameView::SetAStyle(int style, COLORREF fore, COLORREF back, int size, CString *face)
+void CTortoiseGitBlameView::SetAStyle(int style, COLORREF fore, COLORREF back, int size, const char *face)
 {
 	SendEditor(SCI_STYLESETFORE, style, fore);
 	SendEditor(SCI_STYLESETBACK, style, back);
 	if (size >= 1)
 		SendEditor(SCI_STYLESETSIZE, style, size);
 	if (face)
-		SendEditor(SCI_STYLESETFONT, style, reinterpret_cast<LPARAM>(this->m_TextView.StringForControl(*face).GetBuffer()));
+		SendEditor(SCI_STYLESETFONT, style, reinterpret_cast<LPARAM>(face));
 }
 
 void CTortoiseGitBlameView::InitialiseEditor()
@@ -641,12 +641,12 @@ void CTortoiseGitBlameView::InitialiseEditor()
 	m_directFunction = ::SendMessage(m_wEditor, SCI_GETDIRECTFUNCTION, 0, 0);
 	m_directPointer = ::SendMessage(m_wEditor, SCI_GETDIRECTPOINTER, 0, 0);
 	// Set up the global default style. These attributes are used wherever no explicit choices are made.
-	CString fontName(((stdstring)CRegStdString(_T("Software\\TortoiseGit\\BlameFontName"), _T("Courier New"))).c_str());
+	std::string fontName = CUnicodeUtils::StdGetUTF8((stdstring)CRegStdString(_T("Software\\TortoiseGit\\BlameFontName"), _T("Courier New")));
 	SetAStyle(STYLE_DEFAULT,
 			  black,
 			  white,
 			(DWORD)CRegStdDWORD(_T("Software\\TortoiseGit\\BlameFontSize"), 10),
-			&fontName
+			fontName.c_str()
 			);
 	SendEditor(SCI_SETTABWIDTH, (DWORD)CRegStdDWORD(_T("Software\\TortoiseGit\\BlameTabSize"), 4));
 	SendEditor(SCI_SETREADONLY, TRUE);
diff --git a/src/TortoiseGitBlame/TortoiseGitBlameView.h b/src/TortoiseGitBlame/TortoiseGitBlameView.h
index 6982b01..9f631d8 100644
--- a/src/TortoiseGitBlame/TortoiseGitBlameView.h
+++ b/src/TortoiseGitBlame/TortoiseGitBlameView.h
@@ -211,7 +211,7 @@ public:
 
 	LRESULT SendEditor(UINT Msg, WPARAM wParam=0, LPARAM lParam=0);
 
-	void SetAStyle(int style, COLORREF fore, COLORREF back = ::GetSysColor(COLOR_WINDOW), int size = -1, CString *face = NULL);
+	void SetAStyle(int style, COLORREF fore, COLORREF back = ::GetSysColor(COLOR_WINDOW), int size = -1, const char *face = NULL);
 
 	void InitialiseEditor();
 	LONG GetBlameWidth();
diff --git a/src/Utils/MiscUI/SciEdit.cpp b/src/Utils/MiscUI/SciEdit.cpp
index 3068c9b..e86fb0b 100644
--- a/src/Utils/MiscUI/SciEdit.cpp
+++ b/src/Utils/MiscUI/SciEdit.cpp
@@ -368,7 +368,7 @@ CString CSciEdit::GetWordUnderCursor(bool bSelectWord)
 
 void CSciEdit::SetFont(CString sFontName, int iFontSizeInPoints)
 {
-	Call(SCI_STYLESETFONT, STYLE_DEFAULT, (LPARAM)(LPCSTR)CStringA(sFontName));
+	Call(SCI_STYLESETFONT, STYLE_DEFAULT, (LPARAM)(LPCSTR)CUnicodeUtils::GetUTF8(sFontName).GetBuffer());
 	Call(SCI_STYLESETSIZE, STYLE_DEFAULT, iFontSizeInPoints);
 	Call(SCI_STYLECLEARALL);
 
